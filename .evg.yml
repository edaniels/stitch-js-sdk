functions:
  "fetch_source":
    - command: git.get_project
      params:
        directory: "baas-admin-sdk"
  "setup_node": &setup_node
      command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          export ROOT_DIR=`pwd`
          export NVM_DIR="$ROOT_DIR/.nvm"
          curl -OL https://yarnpkg.com/latest.tar.gz
          tar zxf latest.tar.gz
          mv yarn-* yarn
          if [ ! -d "$NVM_DIR" ]; then
            git clone https://github.com/nvm-sh/nvm.git "$NVM_DIR"
            cd "$NVM_DIR"
            git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)`
          fi
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          nvm install ${node_version}
  "setup_go":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          wget --quiet ${go_url}
          tar xf ./go1*gz
          curl --silent -OL https://yarnpkg.com/latest.tar.gz
  "setup_mongod":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -v
          curl --silent ${mongodb_url} | tar xz
    - command: shell.exec
      params:
        shell: "bash"
        background: true
        script: |
          set -v
          cd mongodb-*
          echo "starting mongod..."
          mkdir db_files
          ./bin/mongod --dbpath ./db_files --port 26000 --replSet test &
          echo "waiting for mongod to start up"
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          cd mongodb-*
          ./bin/mongo --nodb --eval 'assert.soon(function(x){try{var d = new Mongo("localhost:26000"); return true}catch(e){return false}}, "timed out connecting")'
          ./bin/mongo --port 26000 --eval 'rs.initiate()'
          echo "mongod is up."
  "setup_baas":
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          set -e
          echo "cloning baas"
          git clone git@github.com:10gen/baas

          echo "downloading libmongo"
          wget --quiet "${libmongo_url}"
          chmod +x libmongo.so

          echo "downloading baas dylib"
          mkdir -p baas/etc/dylib
          cd baas/etc/dylib
          curl -s "${server_baas_lib_url}" | tar xfz - --strip-components=1
          cd -

          echo "building transpiler"
          export PATH="`pwd`/yarn/bin:`pwd`/node/bin:$PATH"
          cd baas/etc/transpiler
          yarn && yarn build -t ${transpiler_target}
    - command: shell.exec
      params:
        shell: "bash"
        background: true
        script: |
          export ROOT_DIR=`pwd`
          export PATH=$ROOT_DIR:$PATH
          export BAAS_PATH=$ROOT_DIR/baas
          export PATH="$PATH:$BAAS_PATH/etc/transpiler/bin"
          export LD_LIBRARY_PATH="$BAAS_PATH/etc/dylib/lib"
          which transpiler
          echo "running baas"
          export GOROOT=$ROOT_DIR/go
          export PATH=$GOROOT/bin:$PATH
          cd $BAAS_PATH
          go run cmd/server/main.go --configFile $BAAS_PATH/etc/configs/test_config.json
    - command: shell.exec
      params:
        shell: "bash"
        script: |
          counter=0
          until $(curl --output /dev/null --silent --head --fail http://localhost:9090); do
            echo "checking for API server to be up..."
            sleep 1
            let counter++
            if [ $counter -gt 100 ]; then
              exit 1
            fi
          done

tasks:
  - name: test
    commands:
      - func: "setup_node"
      - func: "fetch_source"
      - command: shell.exec
        params:
          shell: "bash"
          script: |
            set -e
            export PATH="`pwd`/yarn/bin:`pwd`/node/bin:$PATH"
            cd baas-admin-sdk
            yarn
            yarn test

  - name: lint
    commands:
      - func: "setup_node"
      - func: "fetch_source"
      - command: shell.exec
        params:
          shell: "bash"
          script: |
            set -e
            export PATH="`pwd`/yarn/bin:`pwd`/node/bin:$PATH"
            cd baas-admin-sdk
            yarn
            yarn lint

buildvariants:
- name: rhel70
  display_name: rhel70
  run_on:
    - rhel70
  expansions:
    go_url: "https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz"
    libmongo_url: 'https://s3.amazonaws.com/stitch-artifacts/stitch-mongo-libs/stitch_mongo_libs_linux_64_patch_880e9e39c40bf9fbbdf9e8e771f6186450441046_5e91e60b0305b91b1cbbfa53_20_04_11_15_45_16/libmongo.so'
    mongodb_url: https://downloads.mongodb.com/linux/mongodb-linux-x86_64-enterprise-rhel70-4.2.2.tgz
    node_version: 12.16.2
    server_baas_lib_url: 'https://s3.amazonaws.com/mciuploads/mongodb-mongo-master/stitch-support/enterprise-rhel-70-64-bit/e791a2ea966bb302ff180dd4538d87c078e74747/stitch-support-4.3.2-721-ge791a2e-patch-5e2a6ad2a4cf473ae2e67b09.tgz'
    transpiler_target: node8-linux
  tasks:
    - name: test
    - name: lint
