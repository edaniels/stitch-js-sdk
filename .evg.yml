functions:
  "fetch_source":
    - command: git.get_project
      params:
        directory: "stitch-js-sdk"

  "setup_mongod":
    - command: shell.exec
      params:
        script: |
          set -v
          curl --silent ${mongodb_url} | tar xvz
    - command: shell.exec
      params:
        background: true
        script: |
          set -v
          cd mongodb-*
          echo "starting mongod..."
          mkdir db_files
          ./bin/mongod --dbpath ./db_files --port 26000 &
          echo "waiting for mongod to start up"
    - command: shell.exec
      params:
        script: |
          set -e
          cd mongodb-*
          ./bin/mongo --nodb --eval 'assert.soon(function(x){try{var d = new Mongo("localhost:26000"); return true}catch(e){return false}}, "timed out connecting")'
          echo "mongod is up."

  "setup_stitch":
    - command: shell.exec
      params:
        silent: true
        script: |
          set -e
          echo export TEST_STITCH_AWS_ACCESS_KEY_ID=${test_aws_key} >> creds
          echo export TEST_STITCH_AWS_SECRET_ACCESS_KEY=${test_aws_secret} >> creds
          echo export TEST_STITCH_TWILIO_SID=${test_twilio_sid} >> creds
          echo export TEST_STITCH_TWILIO_AUTH_TOKEN=${test_twilio_authtoken} >> creds
          echo export FB_APP_ID=${test_facebook_app_id} >> creds
          echo export FB_APP_SECRET=${test_facebook_app_secret} >> creds

    - command: shell.exec
      params:
        script: |
          set -e
          echo "cloning stitch"
          mkdir -p src/github.com/10gen
          git clone git@github.com:10gen/stitch src/github.com/10gen/stitch

          echo "downloading libmongo"
          wget --quiet "https://s3.amazonaws.com/stitch-artifacts/stitch-mongo-libs/stitch_mongo_libs_linux_64_patch_1f02b06ec6fd48bad0b725b77bc194c84f839f53_5ab7216fc9ec44724e08f194_18_03_25_04_11_28/libmongo.so"
          chmod +x libmongo.so

          echo "building transpiler"
          cd src/github.com/10gen/stitch/etc/transpiler
          yarn install && yarn run build -t ${transpiler_target}
    - command: shell.exec
      params:
        background: true
        script: |
          export GOPATH=`pwd`
          export PATH="`pwd`:$PATH"
          export STITCH_PATH=$GOPATH/src/github.com/10gen/stitch
          export PATH="$PATH:$STITCH_PATH/etc/transpiler/bin"
          which transpiler
          echo "running stitch"
          go run $STITCH_PATH/cmd/auth/user.go addUser -domainID 000000000000000000000000 -mongoURI mongodb://localhost:26000 -salt 'DQOWene1723baqD!_@#' -id "unique_user@domain.com" -password "password"
          go run $STITCH_PATH/cmd/server/main.go --configFile $STITCH_PATH/etc/configs/test_config.json
    - command: shell.exec
      params:
        script: |
          counter=0
          until $(curl --output /dev/null --silent --head --fail http://localhost:9090); do
            echo "checking for API server to be up..."
            sleep 1
            let counter++
            if [ $counter -gt 100 ]; then
              exit 1
            fi
          done

tasks:
  - name: run_tests
    commands:
      - func: "fetch_source"
      - func: "setup_mongod"
      - func: "setup_stitch"
      - command: shell.exec
        params: 
          script: | # NOTE: Using yarn for install instead of npm due to evergreen permission issue with chromedriver devDependency
            set -e
            echo "running client tests"
            source ./creds
            cd stitch-js-sdk
            npm install --global lerna
            npm install
            lerna bootstrap --hoist
            lerna run build
            lerna run test

  - name: lint
    commands:
      - func: "fetch_source"
      - command: shell.exec
        params:
          script: |
            set -e
            cd stitch-js-sdk
            echo "linting"
            npm install --global lerna
            npm install
            lerna bootstrap --hoist
            lerna run lint
            lerna run tslint-check

  - name: check_import
    commands:
      - func: "fetch_source"
      - command: shell.exec
        params:
          script: |
            set -e
            cd stitch-js-sdk
            yarn install
            npm run build
            npm run build-web
            npm run build-web-dev
            mkdir tmp
            cd tmp
            npm pack ../
            mv mongodb-stitch-*.tgz mongodb-stitch.tgz
            cd ../../
            mkdir test_app
            cd test_app
            npm install --save ../stitch-js-sdk/tmp/mongodb-stitch.tgz
            node -e 'process.on("unhandledRejection", err => { throw err }); const stitch = require("mongodb-stitch"); stitch.StitchClientFactory.create("stitchtest-vsfmv").then(client => client.login());'

buildvariants:
- name: linux-64
  display_name: Linux-64
  run_on:
    - baas-linux
  expansions:
    mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.4.4.tgz
    transpiler_target: node8-linux
  tasks:
    - name: run_tests
    - name: lint
    - name: check_import
